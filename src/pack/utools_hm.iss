; Script generated by the Inno Setup Script Wizard.
; SEE THE DOCUMENTATION FOR DETAILS ON CREATING INNO SETUP SCRIPT FILES!

#define MyAppName "uTools_HM"
#define MyAppVersion "1.2.0.6"
#define MyAppPublisher "UBTech"
#define MyAppURL "https://www.ubtrobot.com"
#define MyAppExeName "launcher.exe"
#define MainFrameExeName "uTools_hm.exe"
#define MyAppSubDir "launcher"
#define LauncherVersion "1.0.0.6"

[Setup]
; NOTE: The value of AppId uniquely identifies this application. Do not use the same AppId value in installers for other applications.
; (To generate a new GUID, click Tools | Generate GUID inside the IDE.)
AppId={{62043533-119B-4DDF-BF14-8D519F2862B6}
AppName={#MyAppName}
AppVersion={#MyAppVersion}
;AppVerName={#MyAppName} {#MyAppVersion}
AppPublisher={#MyAppPublisher}
AppPublisherURL={#MyAppURL}
AppSupportURL={#MyAppURL}
AppUpdatesURL={#MyAppURL}
DefaultDirName={autopf}\{#MyAppName}
DefaultGroupName={#MyAppName}
AllowNoIcons=yes

; Uncomment the following line to run in non administrative install mode (install for current user only.)
;PrivilegesRequired=lowest
OutputDir=C:\Users\ubt\Desktop
OutputBaseFilename=utools_hm_setup_{#MyAppVersion}
SetupIconFile=F:\deviceManager\src\mainFrame\mainFrame\HM64.ico
Compression=lzma
SolidCompression=yes
WizardStyle=modern

[Languages]
Name: "english"; MessagesFile: "compiler:Default.isl"; LicenseFile: "F:\deviceManager\src\pack\privacy_agreement.rtf"
Name: "chinesesimplified"; MessagesFile: "compiler:Languages\ChineseSimplified.isl"; LicenseFile: "F:\deviceManager\src\pack\隐私协议正文.rtf"

[Tasks]
Name: "desktopicon"; Description: "{cm:CreateDesktopIcon}"; GroupDescription: "{cm:AdditionalIcons}";

[Files]
Source: "F:\deviceManager\src\pack\pack_folder\*"; DestDir: "{app}"; Flags: ignoreversion recursesubdirs createallsubdirs
; NOTE: Don't use "Flags: ignoreversion" on any shared system files

[Icons]
Name: "{group}\{cm:UninstallProgram,{#MyAppName}}"; Filename: "{uninstallexe}"
Name: "{autodesktop}\{#MyAppName}"; Filename: "{app}\{#MyAppSubDir}\{#LauncherVersion}\{#MyAppExeName}"; Tasks: desktopicon

[Run]
Filename: "{app}\{#MyAppSubDir}\{#LauncherVersion}\{#MyAppExeName}"; Description: "{cm:LaunchProgram,{#StringChange(MyAppName, '&', '&&')}}"; Flags: nowait postinstall shellexec skipifsilent

[UninstallDelete]
//Type: files; Name: "{app}\{#AppName}.ini"
Type: filesandordirs; Name: "{app}"
Type: filesandordirs; Name: "{localappdata}\{#MyAppName}"
//Type: fileuserappdata; Name: "{userappdata}\UBTECH_uFinder"

; 自定义不同语言文本
[CustomMessages]
english.checkSoftTip=Setup detects that the software to be installed is running!%n%nClick "ok" to continue the operation after terminating the software, otherwise click "cancel" .
chinesesimplified.checkSoftTip=安装程序检测到将安装的软件正在运行！%n%n点击"确定"终止软件后继续操作，否则点击"取消"。
english.checkSoftConfigTip=do you want to delete user file
chinesesimplified.checkSoftConfigTip=您是否要删除用户配置信息？

[Code]
procedure InitializeWizard(); 
begin
WizardForm.LicenseLabel1.Visible := false;
end;

function ExitProcess(ExeFileName: integer): Integer;
external 'ExitProcess@kernel32.dll stdcall';

// 自定义函数，判断软件是否运行，参数为需要判断的软件的exe名称
function KDetectSoft(strLauncherName: String; strMainFrameName: String): Boolean;
// 变量定义
var ErrorCode: Integer;
var bRes: Boolean;
var strFileContent: AnsiString;
var strTmpPath: String;  // 临时目录
var strTmpFile: String;  // 临时文件，保存查找软件数据结果
var strCmdFind: String;  // 查找软件命令
var strCmdKill: String;  // 终止软件命令
var strCmdFindMainFrame: String;  // 查找ucode命令
var strCmdKillMainFrame: String;  // 终止ucode命令
begin
  strTmpPath := GetTempDir();
  strTmpFile := Format('%sfindSoftRes.txt', [strTmpPath]);
  strCmdFind := Format('/c tasklist /nh|find /c /i "%s" > "%s"', [strLauncherName, strTmpFile]);
  strCmdKill := Format('/c taskkill /f /t /im %s', [strLauncherName]);
  strCmdFindMainFrame:= Format('/c tasklist /nh|find /c /i "%s" > "%s"', [strMainFrameName, strTmpFile]);
  strCmdKillMainFrame := Format('/c taskkill /f /t /im %s', [strMainFrameName]);
  //ShellExec('open', ExpandConstant('{cmd}'), '/c taskkill /f /t /im 你的软件名.exe', '', SW_HIDE, ewNoWait, ErrorCode);
  //bRes := ShellExec('open', ExpandConstant('{cmd}'), '/c tasklist /nh|find /c /i "你的软件名.exe" > 0.txt', '', SW_HIDE, ewWaitUntilTerminated, ErrorCode);
  bRes := ShellExec('open', ExpandConstant('{cmd}'), strCmdFind, '', SW_HIDE, ewWaitUntilTerminated, ErrorCode);
  if bRes then begin
      bRes := LoadStringFromFile(strTmpFile, strFileContent);
      strFileContent := Trim(strFileContent);
      if bRes then begin
         if StrToInt(strFileContent) > 0 then begin
            if MsgBox(ExpandConstant('{cm:checkSoftTip}'), mbConfirmation, MB_OKCANCEL) = IDOK then begin
             // 终止程序
             ShellExec('open', ExpandConstant('{cmd}'), strCmdKill, '', SW_HIDE, ewWaitUntilTerminated, ErrorCode);
             ShellExec('open', ExpandConstant('{cmd}'), strCmdKillMainFrame, '', SW_HIDE, ewWaitUntilTerminated, ErrorCode);
             Result:= true;// 继续安装
            end else begin
              ExitProcess(0);
            end;
         end else begin
            //MsgBox('软件没在运行', mbInformation, MB_OK);
            //软件没有在运行，再判断ucode是否存在
            bRes := ShellExec('open', ExpandConstant('{cmd}'), strCmdFindMainFrame, '', SW_HIDE, ewWaitUntilTerminated, ErrorCode);
            if bRes then begin
                bRes := LoadStringFromFile(strTmpFile, strFileContent);
                strFileContent := Trim(strFileContent);
                if bRes then begin
                   if StrToInt(strFileContent) > 0 then begin
                      if MsgBox(ExpandConstant('{cm:checkSoftTip}'), mbConfirmation, MB_OKCANCEL) = IDOK then begin
                       // 终止程序
                       ShellExec('open', ExpandConstant('{cmd}'), strCmdKillMainFrame, '', SW_HIDE, ewWaitUntilTerminated, ErrorCode);
                       Result:= true;// 继续安装
                      end else begin
                       ExitProcess(0);
                      end;
                   end else begin
                      //MsgBox('软件没在运行', mbInformation, MB_OK);
                      Result:= true;
                      Exit;
                   end;
                end;
            end;
            Result:= true;
            Exit;
         end;
      end;
  end;
  Result :=true;
end;

// 开始页下一步时判断软件是否运行
function NextButtonClick(CurPageID: Integer): Boolean;
begin
  if 1=CurPageID then begin
      Result := KDetectSoft('{#MyAppExeName}', '{#MainFrameExeName}');
      Exit;
  end; 
  Result:= true;
end;

// 卸载时关闭软件
function InitializeUninstall(): Boolean;
begin
  Result := KDetectSoft('{#MyAppExeName}', '{#MainFrameExeName}');
end;
